# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overriden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    file:
        name: /tmp/spring.log

spring:
    profiles:
        active: ${SPRING_PROFILES_ACTIVE}
    application:
        name: valtimo-backend
    jackson:
        date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
        time-zone: UTC
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        url: ${SPRING_DATASOURCE_URL}
        name: ${SPRING_DATASOURCE_NAME}
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
        hikari:
            poolName: "valtimo-core-pool"
            auto-commit: false
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 500
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
                characterEncoding: utf8
                useUnicode: true
                useLegacyDatetimeCode: false
                useSSL: false
                useLocalSessionState: true
                rewriteBatchedStatements: true
                cacheResultSetMetadata: true
                cacheServerConfiguration: true
                elideSetAutoCommits: true
                maintainTimeStats: false
                serverTimezone: UTC
                allowPublicKeyRetrieval: true
    groovy:
        template:
            check-template-location: false
    liquibase:
        enabled: false
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        database: postgresql
        show_sql: false
        open-in-view: false
        properties:
            hibernate:
                hbm2ddl.auto: none
                generate_statistics: false
                naming-strategy: org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy
                cache:
                    use_second_level_cache: false
                    use_query_cache: false
                    region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                format_sql: true
                jdbc:
                    time_zone: UTC
                connection:
                    provider_disables_autocommit: true
        hibernate:
            ddl-auto: none
    messages:
        basename: i18n/messages
    main.allow-bean-definition-overriding: true
    jersey:
        application-path: /api/camunda-rest
    autoconfigure:
        exclude:
            - org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration
            - org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
    rabbitmq:
        ssl.enabled: true
        host: ${SPRING_RABBITMQ_HOST}
        port: ${SPRING_RABBITMQ_PORT}
        username: ${SPRING_RABBITMQ_USERNAME}
        password: ${SPRING_RABBITMQ_PASSWORD}
        publisher-confirm-type: correlated
        publisher-returns: true
    security:
        oauth2:
            resourceserver:
                jwt:
                    jwk-set-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI}
            client:
                provider:
                    keycloakjwt:
                        issuer-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAKJWT_ISSUERURI}
                    keycloakapi:
                        issuer-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAKAPI_ISSUERURI}
                registration:
                    keycloakjwt:
                        client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAKJWT_CLIENTID}
                    keycloakapi:
                        client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAKAPI_CLIENTID}
                        client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAKAPI_CLIENTSECRET}
                        authorization-grant-type: authorization_code
                        scope: openid

server:
    port: 8080
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

mailing:
    onlyAllowWhitelistedRecipients: true
    redirectAllMails: false
    whitelistedEmailAddresses:
    whitelistedDomains:
    sendRedirectedMailsTo:

valtimo:
    app:
        scheme: http
        hostname: ${VALTIMO_APP_HOSTNAME}
    oauth:
        identifier-field: username
    hardening:
        removeStacktracesFromReturnedExceptions: true
        allowStacktraceOnIps:
            - "*"
    openapi:
        enabled: false
        title: Valtimo Implementation API
        description: Valtimo Implementation API documentation
        version: 1.0.0
        termsOfServiceUrl:
        contactName:
        contactUrl:
        contactEmail:
        license:
        licenseUrl:
    connector-encryption:
        secret: ${VALTIMO_CONNECTORENCRYPTION_SECRET}
    plugin:
        encryption-secret: ${VALTIMO_PLUGIN_ENCRYPTIONSECRET}
    openklant:
        url: https://openklant-zgw.test.k8s.ritense.com
        clientId: dummy
        secret: dummy
        rsin: dummy
    database: postgres
    changelog:
        pbac:
            clear-tables: true
    security:
        whitelist:
            hosts:
                - localhost
    authorization:
        dashboard:
            enabled: true
    logging:
        deletionCron: 0 0 * * * ? # Every hour
        retentionInMinutes: 60
    zgw:
        zaakdetails:
            linktozaak:
                enabled: true

spring-actuator:
    username: admin
    password: #env var

audit:
    record:
        retention: 365 # days

# ==================
# CRON job settings
# ==================
scheduling:
    enabled: true
    job:
        cron:
            syncAuth0LogsEvents: 0 0 3 * * ? # Every day at 3:00
            cleanupAuditEvents: 0 0 4 * * ? # Every day at 00:00
            taskNotificationReminder: 0 0 10 * * ? # Every day at 10:00

camunda:
    bpm:
        database:
            type: postgres
        history-level: AUDIT
        history-level-default: AUDIT
        generic-properties:
            properties:
                enforceHistoryTimeToLive: false
        admin-user:
            id: Admin
            password: ${CAMUNDA_BPM_ADMINUSER_PASSWORD}
            first-name: Admin account
